{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Praveen A\\\\Documents\\\\ExpenseMgmt-master (1)\\\\ExpenseMgmt-master\\\\frontend\\\\src\\\\context\\\\exp\\\\ExpState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ExpContext from './ExpContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpState = props => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [incomes, setIncomes] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [exptotal, setExptotal] = useState(0);\n  const [available, setAvailable] = useState(0);\n\n  // Income manipulations\n  const addIncome = async income => {\n    try {\n      console.log(\"Adding an income\");\n      const response = await fetch(`http://localhost:5000/api/v1/add-income`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        },\n        body: JSON.stringify(income)\n      });\n      const json = await response.json();\n      console.log(json);\n      const addin = {\n        user: \"64719ad62d608481ee49fe86\",\n        title: income.title,\n        amount: income.amount,\n        type: \"income\",\n        date: income.date,\n        category: income.category,\n        description: income.description,\n        _id: \"647def50c456489e555862e0\",\n        createdAt: \"2023-06-05T14:21:04.712Z\",\n        updatedAt: \"2023-06-05T14:21:04.712Z\",\n        __v: 0\n      };\n\n      // Adding the new income to the array\n      setIncomes(prevIncomes => [...prevIncomes, addin]);\n      alert(\"Income added successfully\");\n      getIncome();\n    } catch (error) {\n      console.error(\"Failed to add income:\", error);\n    }\n  };\n  const getIncome = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/v1/get-incomes`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        }\n      });\n      const json = await response.json();\n      console.log(json);\n      setIncomes(Array.isArray(json) ? json : []);\n      totalIncome(json);\n    } catch (error) {\n      console.error(\"Failed to fetch incomes:\", error);\n      setIncomes([]);\n    }\n  };\n  const deleteIncome = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/v1/delete-income/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        }\n      });\n      const json = await response.json();\n      console.log(json);\n      const newincome = incomes.filter(income => income._id !== id);\n      setIncomes(newincome);\n      alert(\"Income deleted successfully\");\n      getIncome();\n    } catch (error) {\n      console.error(\"Failed to delete income:\", error);\n    }\n  };\n  const totalIncome = incomesArray => {\n    const x = incomesArray.reduce((sum, income) => sum + income.amount, 0);\n    setTotal(x);\n    return x;\n  };\n\n  // Expense manipulations\n  const addExpense = async expense => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/v1/add-expense`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        },\n        body: JSON.stringify(expense)\n      });\n      const json = await response.json();\n      console.log(json);\n      const addexp = {\n        user: \"64719ad62d608481ee49fe86\",\n        title: expense.title,\n        amount: expense.amount,\n        type: \"expense\",\n        date: expense.date,\n        category: expense.category,\n        description: expense.description,\n        _id: \"647def50c456489e555862e0\",\n        createdAt: \"2023-06-05T14:21:04.712Z\",\n        updatedAt: \"2023-06-05T14:21:04.712Z\",\n        __v: 0\n      };\n\n      // Adding the new expense to the array\n      setExpenses(prevExpenses => [...prevExpenses, addexp]);\n      alert(\"Expense added successfully\");\n      getExpense();\n    } catch (error) {\n      console.error(\"Failed to add expense:\", error);\n    }\n  };\n  const getExpense = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/v1/get-expenses`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        }\n      });\n      const json = await response.json();\n      console.log(json);\n      setExpenses(Array.isArray(json) ? json : []);\n      totalExpense(json);\n    } catch (error) {\n      console.error(\"Failed to fetch expenses:\", error);\n      setExpenses([]);\n    }\n  };\n  const deleteExpense = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/v1/delete-expense/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        }\n      });\n      const json = await response.json();\n      console.log(json);\n      const newexpense = expenses.filter(expense => expense._id !== id);\n      setExpenses(newexpense);\n      alert(\"Expense deleted successfully\");\n      getExpense();\n    } catch (error) {\n      console.error(\"Failed to delete expense:\", error);\n    }\n  };\n  const totalExpense = expensesArray => {\n    const x = expensesArray.reduce((sum, expense) => sum + expense.amount, 0);\n    setExptotal(x);\n    return x;\n  };\n  const getAvailable = async () => {\n    try {\n      const [incomesResponse, expensesResponse] = await Promise.all([fetch(`http://localhost:5000/api/v1/get-incomes`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        }\n      }), fetch(`http://localhost:5000/api/v1/get-expenses`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        }\n      })]);\n      const incomesJson = await incomesResponse.json();\n      const expensesJson = await expensesResponse.json();\n      const inc = totalIncome(incomesJson);\n      const exp = totalExpense(expensesJson);\n      const sol = inc - exp;\n      setAvailable(sol);\n    } catch (error) {\n      console.error(\"Failed to calculate available balance:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ExpContext.Provider, {\n    value: {\n      getAvailable,\n      available,\n      deleteExpense,\n      getExpense,\n      addExpense,\n      totalIncome,\n      total,\n      incomes,\n      deleteIncome,\n      addIncome,\n      getIncome,\n      exptotal,\n      expenses,\n      totalExpense\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpState, \"E8hEynDYoSbb+lmwYXYOODGSkfU=\");\n_c = ExpState;\nexport default ExpState;\nvar _c;\n$RefreshReg$(_c, \"ExpState\");","map":{"version":3,"names":["React","useState","ExpContext","jsxDEV","_jsxDEV","ExpState","props","_s","expenses","setExpenses","incomes","setIncomes","total","setTotal","exptotal","setExptotal","available","setAvailable","addIncome","income","console","log","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","json","addin","user","title","amount","type","date","category","description","_id","createdAt","updatedAt","__v","prevIncomes","alert","getIncome","error","Array","isArray","totalIncome","deleteIncome","id","newincome","filter","incomesArray","x","reduce","sum","addExpense","expense","addexp","prevExpenses","getExpense","totalExpense","deleteExpense","newexpense","expensesArray","getAvailable","incomesResponse","expensesResponse","Promise","all","incomesJson","expensesJson","inc","exp","sol","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Praveen A/Documents/ExpenseMgmt-master (1)/ExpenseMgmt-master/frontend/src/context/exp/ExpState.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ExpContext from './ExpContext';\n\nconst ExpState = (props) => {\n    const [expenses, setExpenses] = useState([]);\n    const [incomes, setIncomes] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [exptotal, setExptotal] = useState(0);\n    const [available, setAvailable] = useState(0);\n\n    // Income manipulations\n    const addIncome = async (income) => {\n        try {\n            console.log(\"Adding an income\");\n\n            const response = await fetch(`http://localhost:5000/api/v1/add-income`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('token'),\n                },\n                body: JSON.stringify(income),\n            });\n            const json = await response.json();\n            console.log(json);\n\n            const addin = {\n                user: \"64719ad62d608481ee49fe86\",\n                title: income.title,\n                amount: income.amount,\n                type: \"income\",\n                date: income.date,\n                category: income.category,\n                description: income.description,\n                _id: \"647def50c456489e555862e0\",\n                createdAt: \"2023-06-05T14:21:04.712Z\",\n                updatedAt: \"2023-06-05T14:21:04.712Z\",\n                __v: 0,\n            };\n\n            // Adding the new income to the array\n            setIncomes((prevIncomes) => [...prevIncomes, addin]);\n\n            alert(\"Income added successfully\");\n            getIncome();\n        } catch (error) {\n            console.error(\"Failed to add income:\", error);\n        }\n    };\n\n    const getIncome = async () => {\n        try {\n            const response = await fetch(`http://localhost:5000/api/v1/get-incomes`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('token'),\n                },\n            });\n            const json = await response.json();\n            console.log(json);\n            setIncomes(Array.isArray(json) ? json : []);\n            totalIncome(json);\n        } catch (error) {\n            console.error(\"Failed to fetch incomes:\", error);\n            setIncomes([]);\n        }\n    };\n\n    const deleteIncome = async (id) => {\n        try {\n            const response = await fetch(`http://localhost:5000/api/v1/delete-income/${id}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('token'),\n                },\n            });\n            const json = await response.json();\n            console.log(json);\n\n            const newincome = incomes.filter((income) => income._id !== id);\n            setIncomes(newincome);\n            alert(\"Income deleted successfully\");\n            getIncome();\n        } catch (error) {\n            console.error(\"Failed to delete income:\", error);\n        }\n    };\n\n    const totalIncome = (incomesArray) => {\n        const x = incomesArray.reduce((sum, income) => sum + income.amount, 0);\n        setTotal(x);\n        return x;\n    };\n\n    // Expense manipulations\n    const addExpense = async (expense) => {\n        try {\n            const response = await fetch(`http://localhost:5000/api/v1/add-expense`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('token'),\n                },\n                body: JSON.stringify(expense),\n            });\n            const json = await response.json();\n            console.log(json);\n\n            const addexp = {\n                user: \"64719ad62d608481ee49fe86\",\n                title: expense.title,\n                amount: expense.amount,\n                type: \"expense\",\n                date: expense.date,\n                category: expense.category,\n                description: expense.description,\n                _id: \"647def50c456489e555862e0\",\n                createdAt: \"2023-06-05T14:21:04.712Z\",\n                updatedAt: \"2023-06-05T14:21:04.712Z\",\n                __v: 0,\n            };\n\n            // Adding the new expense to the array\n            setExpenses((prevExpenses) => [...prevExpenses, addexp]);\n\n            alert(\"Expense added successfully\");\n            getExpense();\n        } catch (error) {\n            console.error(\"Failed to add expense:\", error);\n        }\n    };\n\n    const getExpense = async () => {\n        try {\n            const response = await fetch(`http://localhost:5000/api/v1/get-expenses`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('token'),\n                },\n            });\n            const json = await response.json();\n            console.log(json);\n            setExpenses(Array.isArray(json) ? json : []);\n            totalExpense(json);\n        } catch (error) {\n            console.error(\"Failed to fetch expenses:\", error);\n            setExpenses([]);\n        }\n    };\n\n    const deleteExpense = async (id) => {\n        try {\n            const response = await fetch(`http://localhost:5000/api/v1/delete-expense/${id}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('token'),\n                },\n            });\n            const json = await response.json();\n            console.log(json);\n\n            const newexpense = expenses.filter((expense) => expense._id !== id);\n            setExpenses(newexpense);\n            alert(\"Expense deleted successfully\");\n            getExpense();\n        } catch (error) {\n            console.error(\"Failed to delete expense:\", error);\n        }\n    };\n\n    const totalExpense = (expensesArray) => {\n        const x = expensesArray.reduce((sum, expense) => sum + expense.amount, 0);\n        setExptotal(x);\n        return x;\n    };\n\n    const getAvailable = async () => {\n        try {\n            const [incomesResponse, expensesResponse] = await Promise.all([\n                fetch(`http://localhost:5000/api/v1/get-incomes`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'auth-token': localStorage.getItem('token'),\n                    },\n                }),\n                fetch(`http://localhost:5000/api/v1/get-expenses`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'auth-token': localStorage.getItem('token'),\n                    },\n                }),\n            ]);\n\n            const incomesJson = await incomesResponse.json();\n            const expensesJson = await expensesResponse.json();\n\n            const inc = totalIncome(incomesJson);\n            const exp = totalExpense(expensesJson);\n\n            const sol = inc - exp;\n            setAvailable(sol);\n        } catch (error) {\n            console.error(\"Failed to calculate available balance:\", error);\n        }\n    };\n\n    return (\n        <ExpContext.Provider value={{ \n            getAvailable, available, deleteExpense, getExpense, addExpense, \n            totalIncome, total, incomes, deleteIncome, addIncome, getIncome, \n            exptotal, expenses, totalExpense \n        }}>\n            {props.children}\n        </ExpContext.Provider>\n    );\n};\n\nexport default ExpState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}